name: SNS API test

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  pytest:
    runs-on: [self-hosted, ubuntu_e2e]
    steps:
      - uses: actions/checkout@v2
      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          python-version: 3.9  
          cache: true
          architecture: x64    
          version: head     
          prerelease: true     
          enable-pep582: true  
      - name: Install dependencies
        run: pdm install  
      - name: Run pytest
        run: |
          set -o pipefail
          pdm run -v pytest -vvvvvv --html=index.html --self-contained-html --junitxml=report.xml
#         continue-on-error: true
        id: pytest

#       - name: Junit Test Report
#         uses: dorny/test-reporter@v1.6.0
#         if: success() || failure()
#         with:
#           name: "Unit test report"
#           fail-on-error: 'false'
#           path: 'report.xml'
#           reporter: java-junit  
      - name: Junit Test Report
        uses: phoenix-actions/test-reporting@v10
        id: test-report 
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Junit Test Report            # Name of the check run which will be created
          path: report.xml    # Path to test results
          reporter: java-junit
          only-summary: 'false'
          list-suites: 'all'
          list-tests: 'all'
          fail-on-error: 'false'
          output-to: 'step-summary'

      - name: Upload Pytest HTML report to artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: pytest-report
          path: index.html
          
      - name: Create or Update Issue
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
          WORKFLOW: ${{ github.workflow }}
          TITLE: 'SNS API Testing Failed'
          REPORT_URL: https://ainux.github.io/test_sns/pytest-report/
        with:
          filename: .github/TEST_FAIL_TEMPLATE.md
          update_existing: true
          
  publishTestResults:
    name: "Publish Test Results"
    needs:
      [pytest]
    runs-on: ubuntu-22.04
    if: always()
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        id: download
      
      - name: Publish HTML report
        if: always() 
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ${{steps.download.outputs.download-path}}
          keep_files: true 
          user_name: 'github-actions[bot]' 
          user_email: 'github-actions[bot]@users.noreply.github.com' 



